name: Force Cache Clear & Rebuild

on:
  workflow_dispatch:
    inputs:
      clear_all_caches:
        description: 'Clear all Docker caches on server'
        required: true
        type: boolean
        default: true

permissions:
  contents: read
  packages: write

env:
  IMAGE_NAME: ghcr.io/hermanngeorge15/personalweb-fe

jobs:
  force-rebuild:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=latest
            type=sha
            type=raw,value=forced-${{ github.run_number }}

      - name: Build & Push (NO CACHE)
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            VITE_KEYCLOAK_URL=${{ secrets.VITE_KEYCLOAK_URL }}
            VITE_KEYCLOAK_REALM=${{ secrets.VITE_KEYCLOAK_REALM }}
            VITE_KEYCLOAK_CLIENT_ID=${{ secrets.VITE_KEYCLOAK_CLIENT_ID }}
            VITE_KEYCLOAK_CHECK_SSO=true
            VITE_RECAPTCHA_SITE_KEY=${{ secrets.VITE_RECAPTCHA_SITE_KEY }}
            BUILD_DATE=${{ github.run_number }}-forced
          no-cache: true
          pull: true

  force-deploy:
    needs: [force-rebuild]
    runs-on: ubuntu-latest
    steps:
      - name: SSH force redeploy with cache clear
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            set -e
            cd /opt/jiri-site
            
            echo "üõë Stopping frontend..."
            docker compose stop frontend
            
            echo "üóëÔ∏è Removing old container..."
            docker compose rm -f frontend
            
            echo "üî• Clearing ALL Docker caches..."
            docker builder prune -af || true
            docker system prune -af --volumes || true
            
            echo "‚¨áÔ∏è Pulling FRESH image..."
            docker compose pull frontend --no-cache
            
            echo "üöÄ Starting with completely fresh image..."
            docker compose up frontend -d --force-recreate --renew-anon-volumes
            
            echo "‚ôªÔ∏è Final cleanup..."
            docker image prune -af
            
            echo "‚úÖ Force deployment complete!"
            echo "üìä Current containers:"
            docker compose ps
