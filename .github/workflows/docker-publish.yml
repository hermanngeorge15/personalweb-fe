name: fe-docker-publish

on:
  push:
    branches: ['main']
    tags: ['v*']
  pull_request:

permissions:
  contents: read
  packages: write

env:
  IMAGE_NAME: ghcr.io/hermanngeorge15/personalweb-fe

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=latest,enable={{is_default_branch}}
            type=sha
            type=ref,event=tag

      - name: Build & Push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            VITE_KEYCLOAK_URL=${{ secrets.VITE_KEYCLOAK_URL }}
            VITE_KEYCLOAK_REALM=${{ secrets.VITE_KEYCLOAK_REALM }}
            VITE_KEYCLOAK_CLIENT_ID=${{ secrets.VITE_KEYCLOAK_CLIENT_ID }}
            VITE_KEYCLOAK_CHECK_SSO=true
            VITE_RECAPTCHA_SITE_KEY=${{ secrets.VITE_RECAPTCHA_SITE_KEY }}
            BUILD_DATE=${{ github.run_number }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          no-cache: ${{ github.event_name == 'push' && contains(github.event.head_commit.message, '[rebuild]') }}

  deploy:
    if: github.ref == 'refs/heads/main'
    needs: [docker]
    runs-on: ubuntu-latest
    steps:
      - name: SSH redeploy on server
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            set -e
            cd /opt/jiri-site
            docker compose pull frontend
            docker compose up frontend -d --force-recreate
            docker image prune -af --filter "until=24h"
