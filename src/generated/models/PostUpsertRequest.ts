/* tslint:disable */
/* eslint-disable */
/**
 * Personal Site API
 * Public endpoints plus admin CRUD for posts, projects, testimonials, and contact moderation.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface PostUpsertRequest
 */
export interface PostUpsertRequest {
    /**
     * 
     * @type {string}
     * @memberof PostUpsertRequest
     */
    slug?: string;
    /**
     * 
     * @type {string}
     * @memberof PostUpsertRequest
     */
    title?: string;
    /**
     * 
     * @type {string}
     * @memberof PostUpsertRequest
     */
    excerpt?: string;
    /**
     * 
     * @type {string}
     * @memberof PostUpsertRequest
     */
    content_mdx?: string;
    /**
     * 
     * @type {string}
     * @memberof PostUpsertRequest
     */
    cover_url?: string;
    /**
     * 
     * @type {Array<string>}
     * @memberof PostUpsertRequest
     */
    tags?: Array<string>;
    /**
     * 
     * @type {string}
     * @memberof PostUpsertRequest
     */
    status?: string;
    /**
     * 
     * @type {Date}
     * @memberof PostUpsertRequest
     */
    published_at?: Date;
}

/**
 * Check if a given object implements the PostUpsertRequest interface.
 */
export function instanceOfPostUpsertRequest(value: object): value is PostUpsertRequest {
    return true;
}

export function PostUpsertRequestFromJSON(json: any): PostUpsertRequest {
    return PostUpsertRequestFromJSONTyped(json, false);
}

export function PostUpsertRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): PostUpsertRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'slug': json['slug'] == null ? undefined : json['slug'],
        'title': json['title'] == null ? undefined : json['title'],
        'excerpt': json['excerpt'] == null ? undefined : json['excerpt'],
        'content_mdx': json['content_mdx'] == null ? undefined : json['content_mdx'],
        'cover_url': json['cover_url'] == null ? undefined : json['cover_url'],
        'tags': json['tags'] == null ? undefined : json['tags'],
        'status': json['status'] == null ? undefined : json['status'],
        'published_at': json['published_at'] == null ? undefined : (new Date(json['published_at'])),
    };
}

export function PostUpsertRequestToJSON(json: any): PostUpsertRequest {
    return PostUpsertRequestToJSONTyped(json, false);
}

export function PostUpsertRequestToJSONTyped(value?: PostUpsertRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'slug': value['slug'],
        'title': value['title'],
        'excerpt': value['excerpt'],
        'content_mdx': value['content_mdx'],
        'cover_url': value['cover_url'],
        'tags': value['tags'],
        'status': value['status'],
        'published_at': value['published_at'] == null ? undefined : ((value['published_at']).toISOString()),
    };
}

