/* tslint:disable */
/* eslint-disable */
/**
 * Personal Site API
 * Public endpoints plus admin CRUD for posts, projects, testimonials, and contact moderation.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface TestimonialUpsertRequest
 */
export interface TestimonialUpsertRequest {
    /**
     * 
     * @type {string}
     * @memberof TestimonialUpsertRequest
     */
    author?: string;
    /**
     * 
     * @type {string}
     * @memberof TestimonialUpsertRequest
     */
    role?: string;
    /**
     * 
     * @type {string}
     * @memberof TestimonialUpsertRequest
     */
    avatar_url?: string;
    /**
     * 
     * @type {string}
     * @memberof TestimonialUpsertRequest
     */
    quote?: string;
    /**
     * 
     * @type {number}
     * @memberof TestimonialUpsertRequest
     */
    order?: number;
}

/**
 * Check if a given object implements the TestimonialUpsertRequest interface.
 */
export function instanceOfTestimonialUpsertRequest(value: object): value is TestimonialUpsertRequest {
    return true;
}

export function TestimonialUpsertRequestFromJSON(json: any): TestimonialUpsertRequest {
    return TestimonialUpsertRequestFromJSONTyped(json, false);
}

export function TestimonialUpsertRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): TestimonialUpsertRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'author': json['author'] == null ? undefined : json['author'],
        'role': json['role'] == null ? undefined : json['role'],
        'avatar_url': json['avatar_url'] == null ? undefined : json['avatar_url'],
        'quote': json['quote'] == null ? undefined : json['quote'],
        'order': json['order'] == null ? undefined : json['order'],
    };
}

export function TestimonialUpsertRequestToJSON(json: any): TestimonialUpsertRequest {
    return TestimonialUpsertRequestToJSONTyped(json, false);
}

export function TestimonialUpsertRequestToJSONTyped(value?: TestimonialUpsertRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'author': value['author'],
        'role': value['role'],
        'avatar_url': value['avatar_url'],
        'quote': value['quote'],
        'order': value['order'],
    };
}

