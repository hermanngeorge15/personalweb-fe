/* tslint:disable */
/* eslint-disable */
/**
 * Personal Site API
 * Public endpoints plus admin CRUD for posts, projects, testimonials, and contact moderation.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ResumeProjectEntity
 */
export interface ResumeProjectEntity {
    /**
     * 
     * @type {string}
     * @memberof ResumeProjectEntity
     */
    id?: string;
    /**
     * 
     * @type {string}
     * @memberof ResumeProjectEntity
     */
    company?: string;
    /**
     * 
     * @type {string}
     * @memberof ResumeProjectEntity
     */
    projectName?: string;
    /**
     * 
     * @type {Date}
     * @memberof ResumeProjectEntity
     */
    startAt?: Date;
    /**
     * 
     * @type {Date}
     * @memberof ResumeProjectEntity
     */
    endAt?: Date;
    /**
     * 
     * @type {string}
     * @memberof ResumeProjectEntity
     */
    description?: string;
    /**
     * 
     * @type {Array<string>}
     * @memberof ResumeProjectEntity
     */
    responsibilities?: Array<string>;
    /**
     * 
     * @type {Array<string>}
     * @memberof ResumeProjectEntity
     */
    techStack?: Array<string>;
    /**
     * 
     * @type {string}
     * @memberof ResumeProjectEntity
     */
    repoUrl?: string;
    /**
     * 
     * @type {string}
     * @memberof ResumeProjectEntity
     */
    demoUrl?: string;
}

/**
 * Check if a given object implements the ResumeProjectEntity interface.
 */
export function instanceOfResumeProjectEntity(value: object): value is ResumeProjectEntity {
    return true;
}

export function ResumeProjectEntityFromJSON(json: any): ResumeProjectEntity {
    return ResumeProjectEntityFromJSONTyped(json, false);
}

export function ResumeProjectEntityFromJSONTyped(json: any, ignoreDiscriminator: boolean): ResumeProjectEntity {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'company': json['company'] == null ? undefined : json['company'],
        'projectName': json['projectName'] == null ? undefined : json['projectName'],
        'startAt': json['startAt'] == null ? undefined : (new Date(json['startAt'])),
        'endAt': json['endAt'] == null ? undefined : (new Date(json['endAt'])),
        'description': json['description'] == null ? undefined : json['description'],
        'responsibilities': json['responsibilities'] == null ? undefined : json['responsibilities'],
        'techStack': json['techStack'] == null ? undefined : json['techStack'],
        'repoUrl': json['repoUrl'] == null ? undefined : json['repoUrl'],
        'demoUrl': json['demoUrl'] == null ? undefined : json['demoUrl'],
    };
}

export function ResumeProjectEntityToJSON(json: any): ResumeProjectEntity {
    return ResumeProjectEntityToJSONTyped(json, false);
}

export function ResumeProjectEntityToJSONTyped(value?: ResumeProjectEntity | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'company': value['company'],
        'projectName': value['projectName'],
        'startAt': value['startAt'] == null ? undefined : ((value['startAt']).toISOString()),
        'endAt': value['endAt'] == null ? undefined : ((value['endAt']).toISOString()),
        'description': value['description'],
        'responsibilities': value['responsibilities'],
        'techStack': value['techStack'],
        'repoUrl': value['repoUrl'],
        'demoUrl': value['demoUrl'],
    };
}

