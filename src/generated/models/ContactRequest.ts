/* tslint:disable */
/* eslint-disable */
/**
 * Personal Site API
 * Public endpoints plus admin CRUD for posts, projects, testimonials, and contact moderation.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ContactRequest
 */
export interface ContactRequest {
    /**
     * 
     * @type {string}
     * @memberof ContactRequest
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof ContactRequest
     */
    email: string;
    /**
     * 
     * @type {string}
     * @memberof ContactRequest
     */
    message: string;
    /**
     * 
     * @type {string}
     * @memberof ContactRequest
     */
    website?: string;
}

/**
 * Check if a given object implements the ContactRequest interface.
 */
export function instanceOfContactRequest(value: object): value is ContactRequest {
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('email' in value) || value['email'] === undefined) return false;
    if (!('message' in value) || value['message'] === undefined) return false;
    return true;
}

export function ContactRequestFromJSON(json: any): ContactRequest {
    return ContactRequestFromJSONTyped(json, false);
}

export function ContactRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): ContactRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'name': json['name'],
        'email': json['email'],
        'message': json['message'],
        'website': json['website'] == null ? undefined : json['website'],
    };
}

export function ContactRequestToJSON(json: any): ContactRequest {
    return ContactRequestToJSONTyped(json, false);
}

export function ContactRequestToJSONTyped(value?: ContactRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'name': value['name'],
        'email': value['email'],
        'message': value['message'],
        'website': value['website'],
    };
}

