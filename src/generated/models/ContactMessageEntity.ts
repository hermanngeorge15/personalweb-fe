/* tslint:disable */
/* eslint-disable */
/**
 * Personal Site API
 * Public endpoints plus admin CRUD for posts, projects, testimonials, and contact moderation.
 *
 * The version of the OpenAPI document: v1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime'
/**
 *
 * @export
 * @interface ContactMessageEntity
 */
export interface ContactMessageEntity {
  /**
   *
   * @type {string}
   * @memberof ContactMessageEntity
   */
  id?: string
  /**
   *
   * @type {string}
   * @memberof ContactMessageEntity
   */
  name?: string
  /**
   *
   * @type {string}
   * @memberof ContactMessageEntity
   */
  email?: string
  /**
   *
   * @type {string}
   * @memberof ContactMessageEntity
   */
  message?: string
  /**
   *
   * @type {Date}
   * @memberof ContactMessageEntity
   */
  created_at?: Date
  /**
   *
   * @type {boolean}
   * @memberof ContactMessageEntity
   */
  handled?: boolean
}

/**
 * Check if a given object implements the ContactMessageEntity interface.
 */
export function instanceOfContactMessageEntity(
  value: object,
): value is ContactMessageEntity {
  return true
}

export function ContactMessageEntityFromJSON(json: any): ContactMessageEntity {
  return ContactMessageEntityFromJSONTyped(json, false)
}

export function ContactMessageEntityFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): ContactMessageEntity {
  if (json == null) {
    return json
  }
  return {
    id: json['id'] == null ? undefined : json['id'],
    name: json['name'] == null ? undefined : json['name'],
    email: json['email'] == null ? undefined : json['email'],
    message: json['message'] == null ? undefined : json['message'],
    created_at:
      json['created_at'] == null ? undefined : new Date(json['created_at']),
    handled: json['handled'] == null ? undefined : json['handled'],
  }
}

export function ContactMessageEntityToJSON(json: any): ContactMessageEntity {
  return ContactMessageEntityToJSONTyped(json, false)
}

export function ContactMessageEntityToJSONTyped(
  value?: ContactMessageEntity | null,
  ignoreDiscriminator: boolean = false,
): any {
  if (value == null) {
    return value
  }

  return {
    id: value['id'],
    name: value['name'],
    email: value['email'],
    message: value['message'],
    created_at:
      value['created_at'] == null
        ? undefined
        : value['created_at'].toISOString(),
    handled: value['handled'],
  }
}
